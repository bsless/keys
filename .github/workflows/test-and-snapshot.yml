name: Test and Snapshot

on:
  push:
    branches:
      - "master"

jobs:

  build-and-snapshot:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Prepare java
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: 8

      - name: Install clojure tools
        uses: DeLaGuardo/setup-clojure@8.0
        with:
          cli: 1.11.1.1149

      - name: Cache All The Things
        uses: actions/cache@v2
        with:
          path: |
            ~/.m2/repository
            ~/.gitlibs
            ~/.clojure
            ~/.cpcache
          key: ${{ runner.os }}-${{ hashFiles('**/deps.edn') }}

      - name: Run tests and build
        run: clojure -T:build ci :snapshot true
        shell: bash

      - name: Deploy snapshot to Clojars
        run: clojure -T:build deploy :snapshot true
        shell: bash
        env:
          CLOJARS_PASSWORD: ${{secrets.DEPLOY_TOKEN}}
          CLOJARS_USERNAME: ${{secrets.DEPLOY_USERNAME}}


  build-and-test:

    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
        java: [8, 11, 15, 17, 19]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Prepare java
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: ${{ matrix.java }}

      - name: Install clojure tools
        uses: DeLaGuardo/setup-clojure@8.0
        with:
          cli: 1.11.1.1149
          cmd-exe-workaround: 'latest'

      - name: Cache All The Things
        uses: actions/cache@v2
        with:
          path: |
            ~/.m2/repository
            ~/.gitlibs
            ~/.clojure
            ~/.cpcache
          key: ${{ runner.os }}-${{ hashFiles('**/deps.edn') }}

      - name: Run tests on Linux and MacOS
        if: ${{ matrix.os != 'windows-latest' }}
        run: clojure -T:build test
        shell: bash

      - name: Run tests on Windows
        if: ${{ matrix.os == 'windows-latest' }}
        run: clojure -T:build test
        shell: powershell
